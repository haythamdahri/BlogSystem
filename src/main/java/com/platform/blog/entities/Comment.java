package com.platform.blog.entities;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.persistence.*;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;

@Entity
@Table(name="comments")
@NoArgsConstructor
@Getter
@Setter
public class Comment implements Serializable {

    @Id
    @GeneratedValue(strategy= GenerationType.IDENTITY)
    @Column(name="id")
    private Long id;

    @Column(name="content", updatable = false, insertable = true, nullable = false, length = 1500)
    @NotNull(message = "Content cannot be null")
    @NotEmpty(message = "Content cannot be empty")
    @Size(min=10, max=1500, message = "A comment must be between 10 and 1500 character")
    private String content;

    @Temporal(TemporalType.DATE)
    @Column(name="creation_date", updatable = false, insertable = true, nullable = false)
    private Date creationDate;

    @ManyToOne
    @JoinColumn(name="user_id", insertable = true, updatable = true, nullable = false)
    private User creator;

    // Default constructor is generated by Lombok
    // Constructor with necessary args
    public Comment(Long id, String content, Date creationDate, User creator) {
        this.id = id;
        this.content = content;
        this.creationDate = creationDate;
        this.creator = creator;
    }

    public void setCreator(User creator) {
        this.creator = creator;
        this.creator.addComment(this);
    }

    /*
     * @toString for display purposes
     * */
    @Override
    public String toString() {
        return "Id: " + this.id + " | Content: " + this.content + " | Creation Date: " + this.creationDate + " | Creator: [" + this.creator + "]";
    }

}
