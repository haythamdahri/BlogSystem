package com.platform.blog.entities;

import lombok.*;
import org.springframework.format.annotation.DateTimeFormat;

import javax.persistence.*;
import javax.validation.constraints.*;
import javax.ws.rs.DefaultValue;
import java.io.Serializable;
import java.util.Date;

@Entity
@Table(name="posts")
@Data @NoArgsConstructor @Getter @Setter @ToString
public class Post implements Serializable {

    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id")
    private Long id;

    @Column(name="cover", insertable = true, updatable = true, nullable = false)
    private String cover;

    @Column(name="title", unique = false, nullable = false, insertable = true, updatable = true, length = 100)
    @NotNull(message = "Title cannot be null")
    @NotEmpty(message = "Title cannot be empty")
    @Size(min = 10, max = 100, message = "Title length must be between 10 and 100")
    private String title;

    @Column(name="content", unique = false, nullable = false, insertable = true, updatable = true, columnDefinition = "TEXT", length = 5000000)
    @NotNull(message = "Content cannot be null")
    @NotEmpty(message = "Content cannot be empty")
    @Size(min = 250, max = 500000, message = "Post content must contain at least 250 character (500000 character as maximum content length)")
    private String content;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="creation_date", nullable = false, updatable = false, insertable = true, columnDefinition="DATETIME")
    @DateTimeFormat(pattern = "yyyy-MM-dd hh:mm:ss")
    private Date creationDate;

    @Column(name="views")
    private int views;

    @ManyToOne
    @JoinColumn(name="user_id", insertable = true, updatable = true, nullable = false)
    private User creator;

    @Column(name="active", nullable = false, updatable = true, insertable = true)
    private boolean active;

    // Default constructor is generated by Lombok
    // Constructor with necessary args
    public Post(Long id, String cover, String title, String content, Date creationDate, User creator) {
        this.id = id;
        this.cover = cover;
        this.title = title;
        this.content = content;
        this.creationDate = creationDate;
        this.creator = creator;
        this.views = 1;
    }

    public void setCreator(User creator) {
        this.creator = creator;
        this.creator.addPost(this);
    }

    /*
     * @toString for display purposes
     * */
    @Override
    public String toString() {
        return "Id: " + this.id + " | Title: " + this.title + " | Content: " + this.content + " | Creation Date: " + this.creationDate
                + " | Creation: [" + this.creator + "]";
    }

    // Setting default value before persisting the object into Database;
    @PrePersist
    void preInsert() {
        this.views = 0;
        this.creationDate = new Date();
        this.active = false; // Any new post must be reviewed by the administration before approving it
    }




}
